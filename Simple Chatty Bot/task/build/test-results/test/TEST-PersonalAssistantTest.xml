<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PersonalAssistantTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2019-11-02T05:02:49" hostname="Tims-MBP" time="0.101">
  <properties/>
  <testcase name="start" classname="PersonalAssistantTest" time="0.101">
    <failure message="java.lang.AssertionError: Exception in test #1&#10;&#10;java.lang.NumberFormatException: For input string: &quot;&quot;&#10;&#9;at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)&#10;&#9;at java.base/java.lang.Integer.parseInt(Integer.java:662)&#10;&#9;at java.base/java.lang.Integer.parseInt(Integer.java:770)&#10;&#9;at bot.SimpleBot.main(SimpleBot.java:43)&#10;&#10;Below you can see the output of your program during this test&#10;Notice, that '&gt;' symbol means the start of the input:&#10;&#10;Hello! My name is Aid.&#10;I was created in 2018.&#10;Please, remind me your name.&#10;&gt;Marry&#10;What a great name you have, Marry!&#10;Let me guess your age.&#10;Enter remainders of dividing your age by 3, 5 and 7.&#10;&gt;1 0 5&#10;Your age is 40; that's a good time to start programming!&#10;Now I will prove to you that I can count to any number you want.&#10;&gt;10&#10;0!&#10;1!&#10;2!&#10;3!&#10;4!&#10;5!&#10;6!&#10;7!&#10;8!&#10;9!&#10;10!&#10;Let's test your programming knowledge.&#10;What is the purpose of the Scanner?&#10;1. To gather input data to the class.&#10;2. To scan photos or documents.&#10;3. To identify the user's needs.&#10;4. To scan barcodes." type="java.lang.AssertionError">java.lang.AssertionError: Exception in test #1

java.lang.NumberFormatException: For input string: &quot;&quot;
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.base/java.lang.Integer.parseInt(Integer.java:662)
	at java.base/java.lang.Integer.parseInt(Integer.java:770)
	at bot.SimpleBot.main(SimpleBot.java:43)

Below you can see the output of your program during this test
Notice, that '&gt;' symbol means the start of the input:

Hello! My name is Aid.
I was created in 2018.
Please, remind me your name.
&gt;Marry
What a great name you have, Marry!
Let me guess your age.
Enter remainders of dividing your age by 3, 5 and 7.
&gt;1 0 5
Your age is 40; that's a good time to start programming!
Now I will prove to you that I can count to any number you want.
&gt;10
0!
1!
2!
3!
4!
5!
6!
7!
8!
9!
10!
Let's test your programming knowledge.
What is the purpose of the Scanner?
1. To gather input data to the class.
2. To scan photos or documents.
3. To identify the user's needs.
4. To scan barcodes.
	at org.junit.Assert.fail(Assert.java:88)
	at org.hyperskill.hstest.v6.stage.BaseStageTest.start(BaseStageTest.java:172)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Hello! My name is Aid.
I was created in 2018.
Please, remind me your name.
>Marry
What a great name you have, Marry!
Let me guess your age.
Enter remainders of dividing your age by 3, 5 and 7.
>1 0 5
Your age is 40; that's a good time to start programming!
Now I will prove to you that I can count to any number you want.
>10
0!
1!
2!
3!
4!
5!
6!
7!
8!
9!
10!
Let's test your programming knowledge.
What is the purpose of the Scanner?
1. To gather input data to the class.
2. To scan photos or documents.
3. To identify the user's needs.
4. To scan barcodes.
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
